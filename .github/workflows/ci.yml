name: Bourne CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      scylla:
        image: scylladb/scylla:5.4.9
        ports:
          - "9042:9042"
        options: >-
          --health-cmd "cqlsh -e 'DESCRIBE KEYSPACES'"
          --health-interval 10s
          --health-timeout 20s
          --health-retries 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Cassandra tools (cqlsh)
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install cqlsh

      zookeeper:
        image: confluentinc/cp-zookeeper:7.6.0
        ports:
          - "2181:2181"
        options: >-
          --health-cmd "zkServer.sh status"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

      kafka:
        image: confluentinc/cp-kafka:7.6.0
        ports:
          - "9092:9092"
        env:
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        options: >-
          --health-cmd "kafka-topics --bootstrap-server localhost:9092 --list"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install PDM
      run: pip install pdm

    - name: Cache PDM dependencies
      uses: actions/cache@v3
      with:
        path: |
          .venv
          __pypackages__
        key: pdm-${{ hashFiles('pdm.lock') }}

    - name: Install dependencies
      run: |
        pdm install -G dev
        pdm run pip install --upgrade pip

    - name: Run tests
      env:
        SCYLLA_HOST: localhost
        KAFKA_BROKERS: "localhost:9092"
      run: pdm run pytest -v tests/

    - name: Code formatting (black)
      run: pdm run black --check src tests

    - name: Type checking (mypy)
      run: pdm run mypy src

    - name: Linting (ruff)
      run: pdm run ruff check src tests

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Login to AWS ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            your-ecr-repo/bourne:latest
            your-ecr-repo/bourne:${{ github.sha }}

      - name: Security scan (trivy)
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          exit-code: '1'
          format: 'table'
          severity: 'CRITICAL'